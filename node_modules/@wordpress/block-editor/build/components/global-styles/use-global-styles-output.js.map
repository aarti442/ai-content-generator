{"version":3,"names":["_blocks","require","_data","_element","_styleEngine","_components","_utils","_getBlockCssSelector","_typographyUtils","_context","_hooks","_utils2","_gap","_background","_store","_definitions","_object","_lockUnlock","ELEMENT_CLASS_NAMES","button","caption","BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS","border","color","spacing","typography","kebabCase","unlock","componentsPrivateApis","getPresetsDeclarations","blockPresets","mergedSettings","PRESET_METADATA","reduce","declarations","path","valueKey","valueFunc","cssVarInfix","presetByOrigin","getValueFromObjectPath","forEach","origin","value","push","slug","getPresetsClasses","blockSelector","classes","classSuffix","propertyName","classSelectorToUse","selectorToUse","split","map","selector","join","getPresetsSvgFilters","filter","metadata","at","flatMap","preset","getDuotoneFilter","colors","flattenTree","input","prefix","token","result","Object","keys","key","newKey","replace","newLeaf","newPrefix","concatFeatureVariationSelectorString","featureSelector","styleVariationSelector","featureSelectors","combinedSelectors","trim","getFeatureDeclarations","selectors","styles","entries","feature","isShorthand","subfeature","subfeatureSelector","subfeatureStyles","newDeclarations","getStylesDeclarations","root","featureStyles","blockStyles","useRootPaddingAlign","tree","disableRootPadding","isRoot","ROOT_BLOCK_SELECTOR","output","STYLE_PROPERTY","properties","useEngine","rootOnly","pathToValue","styleValue","entry","name","prop","cssProperty","startsWith","getCSSValueFromRawStyle","background","backgroundImage","getResolvedValue","id","setBackgroundStyleDefaults","extraRules","getCSSRules","rule","ruleValue","getTypographyFontSizeValue","size","settings","getLayoutStyles","layoutDefinitions","LAYOUT_DEFINITIONS","style","hasBlockGapSupport","hasFallbackGapSupport","fallbackGapValue","ruleset","gapValue","getGapCSSValue","blockGap","values","className","spacingStyles","length","spacingStyle","rules","cssValue","combinedSelector","ROOT_CSS_PROPERTIES_SELECTOR","validDisplayModes","displayMode","baseStyles","includes","baseStyle","STYLE_KEYS","pickStyleKeys","treeToPickFrom","pickedEntries","clonedEntries","structuredClone","fromEntries","getNodesWithStyles","blockSelectors","_tree$styles$blocks","nodes","skipSelectorWrapper","ELEMENTS","elements","blocks","blockName","node","_node$elements","variations","variationName","variation","_variation$elements","_variation$blocks","css","variationSelector","styleVariationSelectors","element","elementStyles","scopeSelector","variationBlockName","variationBlockStyles","_variationBlockStyles","variationBlockSelector","variationDuotoneSelector","duotoneSelector","variationFeatureSelectors","scopeFeatureSelectors","variationBlockStyleNodes","hasLayoutSupport","variationBlockElement","variationBlockElementStyles","elementName","sel","elementSelectors","elementSelector","exports","getNodesWithSettings","_tree$settings$blocks","pickPresets","presets","setImmutably","custom","blockCustom","toCustomProperties","customProps","toStyles","disableLayoutStyles","styleOptions","undefined","options","layoutStyles","marginReset","rootPadding","variationStyles","nodesWithStyles","nodesWithSettings","useRootPaddingAwareAlignments","contentSize","wideSize","layout","hasBodyStyles","featureDeclarations","cssSelector","duotoneStyles","duotoneDeclarations","styleDeclarations","generalSelector","processCSSNesting","styleVariationName","styleVariations","baseSelector","styleVariationDeclarations","pseudoSelectorStyles","pseudoKey","pseudoStyle","pseudoDeclarations","_selector","pseudoRule","toSvgFilters","getSelectorsConfig","blockType","rootSelector","config","featureKey","featureName","getBlockCSSSelector","getBlockSelectors","blockTypes","getBlockStyles","variationInstanceId","duotoneSupport","getBlockSupport","supports","__experimentalLayout","__experimentalDefault","blockStyleVariations","variationSuffix","getBlockStyleVariationSelector","updateConfigWithSeparator","needsSeparatorStyleUpdate","text","processedCSS","parts","part","isRootCss","splittedPart","nestedSelector","matches","match","pseudoPart","withoutPseudoElement","appendToSelector","useGlobalStylesOutputWithConfig","mergedConfig","useGlobalSetting","useSelect","select","getSettings","blockEditorStore","blocksStore","useMemo","_updatedConfig$styles","updatedConfig","getBlockTypes","customProperties","globalStyles","svgs","isGlobalStyles","assets","__unstableType","useGlobalStylesOutput","merged","useContext","GlobalStylesContext"],"sources":["@wordpress/block-editor/src/components/global-styles/use-global-styles-output.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\t__EXPERIMENTAL_STYLE_PROPERTY as STYLE_PROPERTY,\n\t__EXPERIMENTAL_ELEMENTS as ELEMENTS,\n\tgetBlockSupport,\n\tgetBlockTypes,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useContext, useMemo } from '@wordpress/element';\nimport { getCSSRules, getCSSValueFromRawStyle } from '@wordpress/style-engine';\nimport { privateApis as componentsPrivateApis } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport {\n\tPRESET_METADATA,\n\tROOT_BLOCK_SELECTOR,\n\tROOT_CSS_PROPERTIES_SELECTOR,\n\tscopeSelector,\n\tscopeFeatureSelectors,\n\tappendToSelector,\n\tgetBlockStyleVariationSelector,\n\tgetResolvedValue,\n} from './utils';\nimport { getBlockCSSSelector } from './get-block-css-selector';\nimport { getTypographyFontSizeValue } from './typography-utils';\nimport { GlobalStylesContext } from './context';\nimport { useGlobalSetting } from './hooks';\nimport { getDuotoneFilter } from '../duotone/utils';\nimport { getGapCSSValue } from '../../hooks/gap';\nimport { setBackgroundStyleDefaults } from '../../hooks/background';\nimport { store as blockEditorStore } from '../../store';\nimport { LAYOUT_DEFINITIONS } from '../../layouts/definitions';\nimport { getValueFromObjectPath, setImmutably } from '../../utils/object';\nimport { unlock } from '../../lock-unlock';\n\n// Elements that rely on class names in their selectors.\nconst ELEMENT_CLASS_NAMES = {\n\tbutton: 'wp-element-button',\n\tcaption: 'wp-element-caption',\n};\n\n// List of block support features that can have their related styles\n// generated under their own feature level selector rather than the block's.\nconst BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS = {\n\tborder: 'border',\n\tcolor: 'color',\n\tspacing: 'spacing',\n\ttypography: 'typography',\n};\nconst { kebabCase } = unlock( componentsPrivateApis );\n\n/**\n * Transform given preset tree into a set of style declarations.\n *\n * @param {Object} blockPresets\n * @param {Object} mergedSettings Merged theme.json settings.\n *\n * @return {Array<Object>} An array of style declarations.\n */\nfunction getPresetsDeclarations( blockPresets = {}, mergedSettings ) {\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, valueKey, valueFunc, cssVarInfix } ) => {\n\t\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\t\tblockPresets,\n\t\t\t\tpath,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( value ) => {\n\t\t\t\t\t\tif ( valueKey && ! valueFunc ) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ value[ valueKey ] }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tvalueFunc &&\n\t\t\t\t\t\t\ttypeof valueFunc === 'function'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ valueFunc( value, mergedSettings ) }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n}\n\n/**\n * Transform given preset tree into a set of preset class declarations.\n *\n * @param {?string} blockSelector\n * @param {Object}  blockPresets\n * @return {string} CSS declarations for the preset classes.\n */\nfunction getPresetsClasses( blockSelector = '*', blockPresets = {} ) {\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, cssVarInfix, classes } ) => {\n\t\t\tif ( ! classes ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\t\tblockPresets,\n\t\t\t\tpath,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( { slug } ) => {\n\t\t\t\t\t\tclasses.forEach( ( { classSuffix, propertyName } ) => {\n\t\t\t\t\t\t\tconst classSelectorToUse = `.has-${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) }-${ classSuffix }`;\n\t\t\t\t\t\t\tconst selectorToUse = blockSelector\n\t\t\t\t\t\t\t\t.split( ',' ) // Selector can be \"h1, h2, h3\"\n\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t( selector ) =>\n\t\t\t\t\t\t\t\t\t\t`${ selector }${ classSelectorToUse }`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.join( ',' );\n\t\t\t\t\t\t\tconst value = `var(--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) })`;\n\t\t\t\t\t\t\tdeclarations += `${ selectorToUse }{${ propertyName }: ${ value } !important;}`;\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn declarations;\n\t\t},\n\t\t''\n\t);\n}\n\nfunction getPresetsSvgFilters( blockPresets = {} ) {\n\treturn PRESET_METADATA.filter(\n\t\t// Duotone are the only type of filters for now.\n\t\t( metadata ) => metadata.path.at( -1 ) === 'duotone'\n\t).flatMap( ( metadata ) => {\n\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\tblockPresets,\n\t\t\tmetadata.path,\n\t\t\t{}\n\t\t);\n\t\treturn [ 'default', 'theme' ]\n\t\t\t.filter( ( origin ) => presetByOrigin[ origin ] )\n\t\t\t.flatMap( ( origin ) =>\n\t\t\t\tpresetByOrigin[ origin ].map( ( preset ) =>\n\t\t\t\t\tgetDuotoneFilter(\n\t\t\t\t\t\t`wp-duotone-${ preset.slug }`,\n\t\t\t\t\t\tpreset.colors\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t\t.join( '' );\n\t} );\n}\n\nfunction flattenTree( input = {}, prefix, token ) {\n\tlet result = [];\n\tObject.keys( input ).forEach( ( key ) => {\n\t\tconst newKey = prefix + kebabCase( key.replace( '/', '-' ) );\n\t\tconst newLeaf = input[ key ];\n\n\t\tif ( newLeaf instanceof Object ) {\n\t\t\tconst newPrefix = newKey + token;\n\t\t\tresult = [ ...result, ...flattenTree( newLeaf, newPrefix, token ) ];\n\t\t} else {\n\t\t\tresult.push( `${ newKey }: ${ newLeaf }` );\n\t\t}\n\t} );\n\treturn result;\n}\n\n/**\n * Gets variation selector string from feature selector.\n *\n * @param {string} featureSelector        The feature selector.\n *\n * @param {string} styleVariationSelector The style variation selector.\n * @return {string} Combined selector string.\n */\nfunction concatFeatureVariationSelectorString(\n\tfeatureSelector,\n\tstyleVariationSelector\n) {\n\tconst featureSelectors = featureSelector.split( ',' );\n\tconst combinedSelectors = [];\n\tfeatureSelectors.forEach( ( selector ) => {\n\t\tcombinedSelectors.push(\n\t\t\t`${ styleVariationSelector.trim() }${ selector.trim() }`\n\t\t);\n\t} );\n\treturn combinedSelectors.join( ', ' );\n}\n\n/**\n * Generate style declarations for a block's custom feature and subfeature\n * selectors.\n *\n * NOTE: The passed `styles` object will be mutated by this function.\n *\n * @param {Object} selectors Custom selectors object for a block.\n * @param {Object} styles    A block's styles object.\n *\n * @return {Object} Style declarations.\n */\nconst getFeatureDeclarations = ( selectors, styles ) => {\n\tconst declarations = {};\n\n\tObject.entries( selectors ).forEach( ( [ feature, selector ] ) => {\n\t\t// We're only processing features/subfeatures that have styles.\n\t\tif ( feature === 'root' || ! styles?.[ feature ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isShorthand = typeof selector === 'string';\n\n\t\t// If we have a selector object instead of shorthand process it.\n\t\tif ( ! isShorthand ) {\n\t\t\tObject.entries( selector ).forEach(\n\t\t\t\t( [ subfeature, subfeatureSelector ] ) => {\n\t\t\t\t\t// Don't process root feature selector yet or any\n\t\t\t\t\t// subfeature that doesn't have a style.\n\t\t\t\t\tif (\n\t\t\t\t\t\tsubfeature === 'root' ||\n\t\t\t\t\t\t! styles?.[ feature ][ subfeature ]\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create a temporary styles object and build\n\t\t\t\t\t// declarations for subfeature.\n\t\t\t\t\tconst subfeatureStyles = {\n\t\t\t\t\t\t[ feature ]: {\n\t\t\t\t\t\t\t[ subfeature ]: styles[ feature ][ subfeature ],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tconst newDeclarations =\n\t\t\t\t\t\tgetStylesDeclarations( subfeatureStyles );\n\n\t\t\t\t\t// Merge new declarations in with any others that\n\t\t\t\t\t// share the same selector.\n\t\t\t\t\tdeclarations[ subfeatureSelector ] = [\n\t\t\t\t\t\t...( declarations[ subfeatureSelector ] || [] ),\n\t\t\t\t\t\t...newDeclarations,\n\t\t\t\t\t];\n\n\t\t\t\t\t// Remove the subfeature's style now it will be\n\t\t\t\t\t// included under its own selector not the block's.\n\t\t\t\t\tdelete styles[ feature ][ subfeature ];\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// Now subfeatures have been processed and removed, we can\n\t\t// process root, or shorthand, feature selectors.\n\t\tif ( isShorthand || selector.root ) {\n\t\t\tconst featureSelector = isShorthand ? selector : selector.root;\n\n\t\t\t// Create temporary style object and build declarations for feature.\n\t\t\tconst featureStyles = { [ feature ]: styles[ feature ] };\n\t\t\tconst newDeclarations = getStylesDeclarations( featureStyles );\n\n\t\t\t// Merge new declarations with any others that share the selector.\n\t\t\tdeclarations[ featureSelector ] = [\n\t\t\t\t...( declarations[ featureSelector ] || [] ),\n\t\t\t\t...newDeclarations,\n\t\t\t];\n\n\t\t\t// Remove the feature from the block's styles now as it will be\n\t\t\t// included under its own selector not the block's.\n\t\t\tdelete styles[ feature ];\n\t\t}\n\t} );\n\n\treturn declarations;\n};\n\n/**\n * Transform given style tree into a set of style declarations.\n *\n * @param {Object}  blockStyles         Block styles.\n *\n * @param {string}  selector            The selector these declarations should attach to.\n *\n * @param {boolean} useRootPaddingAlign Whether to use CSS custom properties in root selector.\n *\n * @param {Object}  tree                A theme.json tree containing layout definitions.\n *\n * @param {boolean} disableRootPadding  Whether to force disable the root padding styles.\n * @return {Array} An array of style declarations.\n */\nexport function getStylesDeclarations(\n\tblockStyles = {},\n\tselector = '',\n\tuseRootPaddingAlign,\n\ttree = {},\n\tdisableRootPadding = false\n) {\n\tconst isRoot = ROOT_BLOCK_SELECTOR === selector;\n\tconst output = Object.entries( STYLE_PROPERTY ).reduce(\n\t\t(\n\t\t\tdeclarations,\n\t\t\t[ key, { value, properties, useEngine, rootOnly } ]\n\t\t) => {\n\t\t\tif ( rootOnly && ! isRoot ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\t\t\tconst pathToValue = value;\n\t\t\tif ( pathToValue[ 0 ] === 'elements' || useEngine ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst styleValue = getValueFromObjectPath(\n\t\t\t\tblockStyles,\n\t\t\t\tpathToValue\n\t\t\t);\n\n\t\t\t// Root-level padding styles don't currently support strings with CSS shorthand values.\n\t\t\t// This may change: https://github.com/WordPress/gutenberg/issues/40132.\n\t\t\tif (\n\t\t\t\tkey === '--wp--style--root--padding' &&\n\t\t\t\t( typeof styleValue === 'string' || ! useRootPaddingAlign )\n\t\t\t) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tif ( properties && typeof styleValue !== 'string' ) {\n\t\t\t\tObject.entries( properties ).forEach( ( entry ) => {\n\t\t\t\t\tconst [ name, prop ] = entry;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t! getValueFromObjectPath( styleValue, [ prop ], false )\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Do not create a declaration\n\t\t\t\t\t\t// for sub-properties that don't have any value.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cssProperty = name.startsWith( '--' )\n\t\t\t\t\t\t? name\n\t\t\t\t\t\t: kebabCase( name );\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t`${ cssProperty }: ${ getCSSValueFromRawStyle(\n\t\t\t\t\t\t\tgetValueFromObjectPath( styleValue, [ prop ] )\n\t\t\t\t\t\t) }`\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t} else if (\n\t\t\t\tgetValueFromObjectPath( blockStyles, pathToValue, false )\n\t\t\t) {\n\t\t\t\tconst cssProperty = key.startsWith( '--' )\n\t\t\t\t\t? key\n\t\t\t\t\t: kebabCase( key );\n\t\t\t\tdeclarations.push(\n\t\t\t\t\t`${ cssProperty }: ${ getCSSValueFromRawStyle(\n\t\t\t\t\t\tgetValueFromObjectPath( blockStyles, pathToValue )\n\t\t\t\t\t) }`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n\n\t/*\n\t * Preprocess background image values.\n\t *\n\t * Note: As we absorb more and more styles into the engine, we could simplify this function.\n\t * A refactor is for the style engine to handle ref resolution (and possibly defaults)\n\t * via a public util used internally and externally. Theme.json tree and defaults could be passed\n\t * as options.\n\t */\n\tif ( !! blockStyles.background ) {\n\t\t/*\n\t\t * Resolve dynamic values before they are compiled by the style engine,\n\t\t * which doesn't (yet) resolve dynamic values.\n\t\t */\n\t\tif ( blockStyles.background?.backgroundImage ) {\n\t\t\tblockStyles.background.backgroundImage = getResolvedValue(\n\t\t\t\tblockStyles.background.backgroundImage,\n\t\t\t\ttree\n\t\t\t);\n\t\t}\n\n\t\t/*\n\t\t * Set default values for block background styles.\n\t\t * Top-level styles are an exception as they are applied to the body.\n\t\t */\n\t\tif ( ! isRoot && !! blockStyles.background?.backgroundImage?.id ) {\n\t\t\tblockStyles = {\n\t\t\t\t...blockStyles,\n\t\t\t\tbackground: {\n\t\t\t\t\t...blockStyles.background,\n\t\t\t\t\t...setBackgroundStyleDefaults( blockStyles.background ),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n\n\tconst extraRules = getCSSRules( blockStyles );\n\textraRules.forEach( ( rule ) => {\n\t\t// Don't output padding properties if padding variables are set or if we're not editing a full template.\n\t\tif (\n\t\t\tisRoot &&\n\t\t\t( useRootPaddingAlign || disableRootPadding ) &&\n\t\t\trule.key.startsWith( 'padding' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst cssProperty = rule.key.startsWith( '--' )\n\t\t\t? rule.key\n\t\t\t: kebabCase( rule.key );\n\n\t\tlet ruleValue = getResolvedValue( rule.value, tree, null );\n\n\t\t// Calculate fluid typography rules where available.\n\t\tif ( cssProperty === 'font-size' ) {\n\t\t\t/*\n\t\t\t * getTypographyFontSizeValue() will check\n\t\t\t * if fluid typography has been activated and also\n\t\t\t * whether the incoming value can be converted to a fluid value.\n\t\t\t * Values that already have a \"clamp()\" function will not pass the test,\n\t\t\t * and therefore the original $value will be returned.\n\t\t\t */\n\t\t\truleValue = getTypographyFontSizeValue(\n\t\t\t\t{ size: ruleValue },\n\t\t\t\ttree?.settings\n\t\t\t);\n\t\t}\n\n\t\t// For aspect ratio to work, other dimensions rules (and Cover block defaults) must be unset.\n\t\t// This ensures that a fixed height does not override the aspect ratio.\n\t\tif ( cssProperty === 'aspect-ratio' ) {\n\t\t\toutput.push( 'min-height: unset' );\n\t\t}\n\n\t\toutput.push( `${ cssProperty }: ${ ruleValue }` );\n\t} );\n\n\treturn output;\n}\n\n/**\n * Get generated CSS for layout styles by looking up layout definitions provided\n * in theme.json, and outputting common layout styles, and specific blockGap values.\n *\n * @param {Object}  props\n * @param {Object}  props.layoutDefinitions     Layout definitions, keyed by layout type.\n * @param {Object}  props.style                 A style object containing spacing values.\n * @param {string}  props.selector              Selector used to group together layout styling rules.\n * @param {boolean} props.hasBlockGapSupport    Whether or not the theme opts-in to blockGap support.\n * @param {boolean} props.hasFallbackGapSupport Whether or not the theme allows fallback gap styles.\n * @param {?string} props.fallbackGapValue      An optional fallback gap value if no real gap value is available.\n * @return {string} Generated CSS rules for the layout styles.\n */\nexport function getLayoutStyles( {\n\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\tstyle,\n\tselector,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tfallbackGapValue,\n} ) {\n\tlet ruleset = '';\n\tlet gapValue = hasBlockGapSupport\n\t\t? getGapCSSValue( style?.spacing?.blockGap )\n\t\t: '';\n\n\t// Ensure a fallback gap value for the root layout definitions,\n\t// and use a fallback value if one is provided for the current block.\n\tif ( hasFallbackGapSupport ) {\n\t\tif ( selector === ROOT_BLOCK_SELECTOR ) {\n\t\t\tgapValue = ! gapValue ? '0.5em' : gapValue;\n\t\t} else if ( ! hasBlockGapSupport && fallbackGapValue ) {\n\t\t\tgapValue = fallbackGapValue;\n\t\t}\n\t}\n\n\tif ( gapValue && layoutDefinitions ) {\n\t\tObject.values( layoutDefinitions ).forEach(\n\t\t\t( { className, name, spacingStyles } ) => {\n\t\t\t\t// Allow outputting fallback gap styles for flex layout type when block gap support isn't available.\n\t\t\t\tif (\n\t\t\t\t\t! hasBlockGapSupport &&\n\t\t\t\t\t'flex' !== name &&\n\t\t\t\t\t'grid' !== name\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( spacingStyles?.length ) {\n\t\t\t\t\tspacingStyles.forEach( ( spacingStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( spacingStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( spacingStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${\n\t\t\t\t\t\t\t\t\t\t\tcssValue ? cssValue : gapValue\n\t\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tlet combinedSelector = '';\n\n\t\t\t\t\t\t\tif ( ! hasBlockGapSupport ) {\n\t\t\t\t\t\t\t\t// For fallback gap styles, use lower specificity, to ensure styles do not unintentionally override theme styles.\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`\n\t\t\t\t\t\t\t\t\t\t: `:where(${ selector }.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:root :where(.${ className })${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t: `:root :where(${ selector }-${ className })${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// For backwards compatibility, ensure the legacy block gap CSS variable is still available.\n\t\tif ( selector === ROOT_BLOCK_SELECTOR && hasBlockGapSupport ) {\n\t\t\truleset += `${ ROOT_CSS_PROPERTIES_SELECTOR } { --wp--style--block-gap: ${ gapValue }; }`;\n\t\t}\n\t}\n\n\t// Output base styles\n\tif ( selector === ROOT_BLOCK_SELECTOR && layoutDefinitions ) {\n\t\tconst validDisplayModes = [ 'block', 'flex', 'grid' ];\n\t\tObject.values( layoutDefinitions ).forEach(\n\t\t\t( { className, displayMode, baseStyles } ) => {\n\t\t\t\tif (\n\t\t\t\t\tdisplayMode &&\n\t\t\t\t\tvalidDisplayModes.includes( displayMode )\n\t\t\t\t) {\n\t\t\t\t\truleset += `${ selector } .${ className } { display:${ displayMode }; }`;\n\t\t\t\t}\n\n\t\t\t\tif ( baseStyles?.length ) {\n\t\t\t\t\tbaseStyles.forEach( ( baseStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( baseStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( baseStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${ cssValue }`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tconst combinedSelector = `.${ className }${\n\t\t\t\t\t\t\t\tbaseStyle?.selector || ''\n\t\t\t\t\t\t\t}`;\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\treturn ruleset;\n}\n\nconst STYLE_KEYS = [\n\t'border',\n\t'color',\n\t'dimensions',\n\t'spacing',\n\t'typography',\n\t'filter',\n\t'outline',\n\t'shadow',\n\t'background',\n];\n\nfunction pickStyleKeys( treeToPickFrom ) {\n\tif ( ! treeToPickFrom ) {\n\t\treturn {};\n\t}\n\tconst entries = Object.entries( treeToPickFrom );\n\tconst pickedEntries = entries.filter( ( [ key ] ) =>\n\t\tSTYLE_KEYS.includes( key )\n\t);\n\t// clone the style objects so that `getFeatureDeclarations` can remove consumed keys from it\n\tconst clonedEntries = pickedEntries.map( ( [ key, style ] ) => [\n\t\tkey,\n\t\tstructuredClone( style ),\n\t] );\n\treturn Object.fromEntries( clonedEntries );\n}\n\nexport const getNodesWithStyles = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.styles ) {\n\t\treturn nodes;\n\t}\n\n\t// Top-level.\n\tconst styles = pickStyleKeys( tree.styles );\n\tif ( styles ) {\n\t\tnodes.push( {\n\t\t\tstyles,\n\t\t\tselector: ROOT_BLOCK_SELECTOR,\n\t\t\t// Root selector (body) styles should not be wrapped in `:root where()` to keep\n\t\t\t// specificity at (0,0,1) and maintain backwards compatibility.\n\t\t\tskipSelectorWrapper: true,\n\t\t} );\n\t}\n\n\tObject.entries( ELEMENTS ).forEach( ( [ name, selector ] ) => {\n\t\tif ( tree.styles?.elements?.[ name ] ) {\n\t\t\tnodes.push( {\n\t\t\t\tstyles: tree.styles?.elements?.[ name ],\n\t\t\t\tselector,\n\t\t\t\t// Top level elements that don't use a class name should not receive the\n\t\t\t\t// `:root :where()` wrapper to maintain backwards compatibility.\n\t\t\t\tskipSelectorWrapper: ! ELEMENT_CLASS_NAMES[ name ],\n\t\t\t} );\n\t\t}\n\t} );\n\n\t// Iterate over blocks: they can have styles & elements.\n\tObject.entries( tree.styles?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockStyles = pickStyleKeys( node );\n\n\t\t\tif ( node?.variations ) {\n\t\t\t\tconst variations = {};\n\t\t\t\tObject.entries( node.variations ).forEach(\n\t\t\t\t\t( [ variationName, variation ] ) => {\n\t\t\t\t\t\tvariations[ variationName ] =\n\t\t\t\t\t\t\tpickStyleKeys( variation );\n\t\t\t\t\t\tif ( variation?.css ) {\n\t\t\t\t\t\t\tvariations[ variationName ].css = variation.css;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst variationSelector =\n\t\t\t\t\t\t\tblockSelectors[ blockName ]\n\t\t\t\t\t\t\t\t?.styleVariationSelectors?.[ variationName ];\n\n\t\t\t\t\t\t// Process the variation's inner element styles.\n\t\t\t\t\t\t// This comes before the inner block styles so the\n\t\t\t\t\t\t// element styles within the block type styles take\n\t\t\t\t\t\t// precedence over these.\n\t\t\t\t\t\tObject.entries( variation?.elements ?? {} ).forEach(\n\t\t\t\t\t\t\t( [ element, elementStyles ] ) => {\n\t\t\t\t\t\t\t\tif ( elementStyles && ELEMENTS[ element ] ) {\n\t\t\t\t\t\t\t\t\tnodes.push( {\n\t\t\t\t\t\t\t\t\t\tstyles: elementStyles,\n\t\t\t\t\t\t\t\t\t\tselector: scopeSelector(\n\t\t\t\t\t\t\t\t\t\t\tvariationSelector,\n\t\t\t\t\t\t\t\t\t\t\tELEMENTS[ element ]\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Process the variations inner block type styles.\n\t\t\t\t\t\tObject.entries( variation?.blocks ?? {} ).forEach(\n\t\t\t\t\t\t\t( [\n\t\t\t\t\t\t\t\tvariationBlockName,\n\t\t\t\t\t\t\t\tvariationBlockStyles,\n\t\t\t\t\t\t\t] ) => {\n\t\t\t\t\t\t\t\tconst variationBlockSelector = scopeSelector(\n\t\t\t\t\t\t\t\t\tvariationSelector,\n\t\t\t\t\t\t\t\t\tblockSelectors[ variationBlockName ]\n\t\t\t\t\t\t\t\t\t\t?.selector\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst variationDuotoneSelector = scopeSelector(\n\t\t\t\t\t\t\t\t\tvariationSelector,\n\t\t\t\t\t\t\t\t\tblockSelectors[ variationBlockName ]\n\t\t\t\t\t\t\t\t\t\t?.duotoneSelector\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst variationFeatureSelectors =\n\t\t\t\t\t\t\t\t\tscopeFeatureSelectors(\n\t\t\t\t\t\t\t\t\t\tvariationSelector,\n\t\t\t\t\t\t\t\t\t\tblockSelectors[ variationBlockName ]\n\t\t\t\t\t\t\t\t\t\t\t?.featureSelectors\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tconst variationBlockStyleNodes =\n\t\t\t\t\t\t\t\t\tpickStyleKeys( variationBlockStyles );\n\n\t\t\t\t\t\t\t\tif ( variationBlockStyles?.css ) {\n\t\t\t\t\t\t\t\t\tvariationBlockStyleNodes.css =\n\t\t\t\t\t\t\t\t\t\tvariationBlockStyles.css;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnodes.push( {\n\t\t\t\t\t\t\t\t\tselector: variationBlockSelector,\n\t\t\t\t\t\t\t\t\tduotoneSelector: variationDuotoneSelector,\n\t\t\t\t\t\t\t\t\tfeatureSelectors: variationFeatureSelectors,\n\t\t\t\t\t\t\t\t\tfallbackGapValue:\n\t\t\t\t\t\t\t\t\t\tblockSelectors[ variationBlockName ]\n\t\t\t\t\t\t\t\t\t\t\t?.fallbackGapValue,\n\t\t\t\t\t\t\t\t\thasLayoutSupport:\n\t\t\t\t\t\t\t\t\t\tblockSelectors[ variationBlockName ]\n\t\t\t\t\t\t\t\t\t\t\t?.hasLayoutSupport,\n\t\t\t\t\t\t\t\t\tstyles: variationBlockStyleNodes,\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t// Process element styles for the inner blocks\n\t\t\t\t\t\t\t\t// of the variation.\n\t\t\t\t\t\t\t\tObject.entries(\n\t\t\t\t\t\t\t\t\tvariationBlockStyles.elements ?? {}\n\t\t\t\t\t\t\t\t).forEach(\n\t\t\t\t\t\t\t\t\t( [\n\t\t\t\t\t\t\t\t\t\tvariationBlockElement,\n\t\t\t\t\t\t\t\t\t\tvariationBlockElementStyles,\n\t\t\t\t\t\t\t\t\t] ) => {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tvariationBlockElementStyles &&\n\t\t\t\t\t\t\t\t\t\t\tELEMENTS[ variationBlockElement ]\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tnodes.push( {\n\t\t\t\t\t\t\t\t\t\t\t\tstyles: variationBlockElementStyles,\n\t\t\t\t\t\t\t\t\t\t\t\tselector: scopeSelector(\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariationBlockSelector,\n\t\t\t\t\t\t\t\t\t\t\t\t\tELEMENTS[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariationBlockElement\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tblockStyles.variations = variations;\n\t\t\t}\n\n\t\t\tif ( blockSelectors?.[ blockName ]?.selector ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tduotoneSelector:\n\t\t\t\t\t\tblockSelectors[ blockName ].duotoneSelector,\n\t\t\t\t\tfallbackGapValue:\n\t\t\t\t\t\tblockSelectors[ blockName ].fallbackGapValue,\n\t\t\t\t\thasLayoutSupport:\n\t\t\t\t\t\tblockSelectors[ blockName ].hasLayoutSupport,\n\t\t\t\t\tselector: blockSelectors[ blockName ].selector,\n\t\t\t\t\tstyles: blockStyles,\n\t\t\t\t\tfeatureSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].featureSelectors,\n\t\t\t\t\tstyleVariationSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].styleVariationSelectors,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tObject.entries( node?.elements ?? {} ).forEach(\n\t\t\t\t( [ elementName, value ] ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tvalue &&\n\t\t\t\t\t\tblockSelectors?.[ blockName ] &&\n\t\t\t\t\t\tELEMENTS[ elementName ]\n\t\t\t\t\t) {\n\t\t\t\t\t\tnodes.push( {\n\t\t\t\t\t\t\tstyles: value,\n\t\t\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector\n\t\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t\t.map( ( sel ) => {\n\t\t\t\t\t\t\t\t\tconst elementSelectors =\n\t\t\t\t\t\t\t\t\t\tELEMENTS[ elementName ].split( ',' );\n\t\t\t\t\t\t\t\t\treturn elementSelectors.map(\n\t\t\t\t\t\t\t\t\t\t( elementSelector ) =>\n\t\t\t\t\t\t\t\t\t\t\tsel + ' ' + elementSelector\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.join( ',' ),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const getNodesWithSettings = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.settings ) {\n\t\treturn nodes;\n\t}\n\n\tconst pickPresets = ( treeToPickFrom ) => {\n\t\tlet presets = {};\n\t\tPRESET_METADATA.forEach( ( { path } ) => {\n\t\t\tconst value = getValueFromObjectPath( treeToPickFrom, path, false );\n\t\t\tif ( value !== false ) {\n\t\t\t\tpresets = setImmutably( presets, path, value );\n\t\t\t}\n\t\t} );\n\t\treturn presets;\n\t};\n\n\t// Top-level.\n\tconst presets = pickPresets( tree.settings );\n\tconst custom = tree.settings?.custom;\n\tif ( Object.keys( presets ).length > 0 || custom ) {\n\t\tnodes.push( {\n\t\t\tpresets,\n\t\t\tcustom,\n\t\t\tselector: ROOT_CSS_PROPERTIES_SELECTOR,\n\t\t} );\n\t}\n\n\t// Blocks.\n\tObject.entries( tree.settings?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockPresets = pickPresets( node );\n\t\t\tconst blockCustom = node.custom;\n\t\t\tif ( Object.keys( blockPresets ).length > 0 || blockCustom ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tpresets: blockPresets,\n\t\t\t\t\tcustom: blockCustom,\n\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const toCustomProperties = ( tree, blockSelectors ) => {\n\tconst settings = getNodesWithSettings( tree, blockSelectors );\n\tlet ruleset = '';\n\tsettings.forEach( ( { presets, custom, selector } ) => {\n\t\tconst declarations = getPresetsDeclarations( presets, tree?.settings );\n\t\tconst customProps = flattenTree( custom, '--wp--custom--', '--' );\n\t\tif ( customProps.length > 0 ) {\n\t\t\tdeclarations.push( ...customProps );\n\t\t}\n\n\t\tif ( declarations.length > 0 ) {\n\t\t\truleset += `${ selector }{${ declarations.join( ';' ) };}`;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport const toStyles = (\n\ttree,\n\tblockSelectors,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tdisableLayoutStyles = false,\n\tdisableRootPadding = false,\n\tstyleOptions = undefined\n) => {\n\t// These allow opting out of certain sets of styles.\n\tconst options = {\n\t\tblockGap: true,\n\t\tblockStyles: true,\n\t\tlayoutStyles: true,\n\t\tmarginReset: true,\n\t\tpresets: true,\n\t\trootPadding: true,\n\t\tvariationStyles: false,\n\t\t...styleOptions,\n\t};\n\tconst nodesWithStyles = getNodesWithStyles( tree, blockSelectors );\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\tconst useRootPaddingAlign = tree?.settings?.useRootPaddingAwareAlignments;\n\tconst { contentSize, wideSize } = tree?.settings?.layout || {};\n\tconst hasBodyStyles =\n\t\toptions.marginReset || options.rootPadding || options.layoutStyles;\n\n\tlet ruleset = '';\n\n\tif ( options.presets && ( contentSize || wideSize ) ) {\n\t\truleset += `${ ROOT_CSS_PROPERTIES_SELECTOR } {`;\n\t\truleset = contentSize\n\t\t\t? ruleset + ` --wp--style--global--content-size: ${ contentSize };`\n\t\t\t: ruleset;\n\t\truleset = wideSize\n\t\t\t? ruleset + ` --wp--style--global--wide-size: ${ wideSize };`\n\t\t\t: ruleset;\n\t\truleset += '}';\n\t}\n\n\tif ( hasBodyStyles ) {\n\t\t/*\n\t\t * Reset default browser margin on the body element.\n\t\t * This is set on the body selector **before** generating the ruleset\n\t\t * from the `theme.json`. This is to ensure that if the `theme.json` declares\n\t\t * `margin` in its `spacing` declaration for the `body` element then these\n\t\t * user-generated values take precedence in the CSS cascade.\n\t\t * @link https://github.com/WordPress/gutenberg/issues/36147.\n\t\t */\n\t\truleset += ':where(body) {margin: 0;';\n\n\t\t// Root padding styles should be output for full templates, patterns and template parts.\n\t\tif ( options.rootPadding && useRootPaddingAlign ) {\n\t\t\t/*\n\t\t\t * These rules reproduce the ones from https://github.com/WordPress/gutenberg/blob/79103f124925d1f457f627e154f52a56228ed5ad/lib/class-wp-theme-json-gutenberg.php#L2508\n\t\t\t * almost exactly, but for the selectors that target block wrappers in the front end. This code only runs in the editor, so it doesn't need those selectors.\n\t\t\t */\n\t\t\truleset += `padding-right: 0; padding-left: 0; padding-top: var(--wp--style--root--padding-top); padding-bottom: var(--wp--style--root--padding-bottom) }\n\t\t\t\t.has-global-padding { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t\t.has-global-padding > .alignfull { margin-right: calc(var(--wp--style--root--padding-right) * -1); margin-left: calc(var(--wp--style--root--padding-left) * -1); }\n\t\t\t\t.has-global-padding :where(:not(.alignfull.is-layout-flow) > .has-global-padding:not(.wp-block-block, .alignfull)) { padding-right: 0; padding-left: 0; }\n\t\t\t\t.has-global-padding :where(:not(.alignfull.is-layout-flow) > .has-global-padding:not(.wp-block-block, .alignfull)) > .alignfull { margin-left: 0; margin-right: 0;\n\t\t\t\t`;\n\t\t}\n\n\t\truleset += '}';\n\t}\n\n\tif ( options.blockStyles ) {\n\t\tnodesWithStyles.forEach(\n\t\t\t( {\n\t\t\t\tselector,\n\t\t\t\tduotoneSelector,\n\t\t\t\tstyles,\n\t\t\t\tfallbackGapValue,\n\t\t\t\thasLayoutSupport,\n\t\t\t\tfeatureSelectors,\n\t\t\t\tstyleVariationSelectors,\n\t\t\t\tskipSelectorWrapper,\n\t\t\t} ) => {\n\t\t\t\t// Process styles for block support features with custom feature level\n\t\t\t\t// CSS selectors set.\n\t\t\t\tif ( featureSelectors ) {\n\t\t\t\t\tconst featureDeclarations = getFeatureDeclarations(\n\t\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t);\n\n\t\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t\t( [ cssSelector, declarations ] ) => {\n\t\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\t\tconst rules = declarations.join( ';' );\n\t\t\t\t\t\t\t\truleset += `:root :where(${ cssSelector }){${ rules };}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Process duotone styles.\n\t\t\t\tif ( duotoneSelector ) {\n\t\t\t\t\tconst duotoneStyles = {};\n\t\t\t\t\tif ( styles?.filter ) {\n\t\t\t\t\t\tduotoneStyles.filter = styles.filter;\n\t\t\t\t\t\tdelete styles.filter;\n\t\t\t\t\t}\n\t\t\t\t\tconst duotoneDeclarations =\n\t\t\t\t\t\tgetStylesDeclarations( duotoneStyles );\n\t\t\t\t\tif ( duotoneDeclarations.length ) {\n\t\t\t\t\t\truleset += `${ duotoneSelector }{${ duotoneDeclarations.join(\n\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t) };}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Process blockGap and layout styles.\n\t\t\t\tif (\n\t\t\t\t\t! disableLayoutStyles &&\n\t\t\t\t\t( ROOT_BLOCK_SELECTOR === selector || hasLayoutSupport )\n\t\t\t\t) {\n\t\t\t\t\truleset += getLayoutStyles( {\n\t\t\t\t\t\tstyle: styles,\n\t\t\t\t\t\tselector,\n\t\t\t\t\t\thasBlockGapSupport,\n\t\t\t\t\t\thasFallbackGapSupport,\n\t\t\t\t\t\tfallbackGapValue,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// Process the remaining block styles (they use either normal block class or __experimentalSelector).\n\t\t\t\tconst styleDeclarations = getStylesDeclarations(\n\t\t\t\t\tstyles,\n\t\t\t\t\tselector,\n\t\t\t\t\tuseRootPaddingAlign,\n\t\t\t\t\ttree,\n\t\t\t\t\tdisableRootPadding\n\t\t\t\t);\n\t\t\t\tif ( styleDeclarations?.length ) {\n\t\t\t\t\tconst generalSelector = skipSelectorWrapper\n\t\t\t\t\t\t? selector\n\t\t\t\t\t\t: `:root :where(${ selector })`;\n\t\t\t\t\truleset += `${ generalSelector }{${ styleDeclarations.join(\n\t\t\t\t\t\t';'\n\t\t\t\t\t) };}`;\n\t\t\t\t}\n\t\t\t\tif ( styles?.css ) {\n\t\t\t\t\truleset += processCSSNesting(\n\t\t\t\t\t\tstyles.css,\n\t\t\t\t\t\t`:root :where(${ selector })`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif ( options.variationStyles && styleVariationSelectors ) {\n\t\t\t\t\tObject.entries( styleVariationSelectors ).forEach(\n\t\t\t\t\t\t( [ styleVariationName, styleVariationSelector ] ) => {\n\t\t\t\t\t\t\tconst styleVariations =\n\t\t\t\t\t\t\t\tstyles?.variations?.[ styleVariationName ];\n\t\t\t\t\t\t\tif ( styleVariations ) {\n\t\t\t\t\t\t\t\t// If the block uses any custom selectors for block support, add those first.\n\t\t\t\t\t\t\t\tif ( featureSelectors ) {\n\t\t\t\t\t\t\t\t\tconst featureDeclarations =\n\t\t\t\t\t\t\t\t\t\tgetFeatureDeclarations(\n\t\t\t\t\t\t\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\t\t\t\t\t\t\tstyleVariations\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tObject.entries(\n\t\t\t\t\t\t\t\t\t\tfeatureDeclarations\n\t\t\t\t\t\t\t\t\t).forEach(\n\t\t\t\t\t\t\t\t\t\t( [ baseSelector, declarations ] ) => {\n\t\t\t\t\t\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst cssSelector =\n\t\t\t\t\t\t\t\t\t\t\t\t\tconcatFeatureVariationSelectorString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseSelector,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyleVariationSelector\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tconst rules =\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeclarations.join( ';' );\n\t\t\t\t\t\t\t\t\t\t\t\truleset += `:root :where(${ cssSelector }){${ rules };}`;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Otherwise add regular selectors.\n\t\t\t\t\t\t\t\tconst styleVariationDeclarations =\n\t\t\t\t\t\t\t\t\tgetStylesDeclarations(\n\t\t\t\t\t\t\t\t\t\tstyleVariations,\n\t\t\t\t\t\t\t\t\t\tstyleVariationSelector,\n\t\t\t\t\t\t\t\t\t\tuseRootPaddingAlign,\n\t\t\t\t\t\t\t\t\t\ttree\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif ( styleVariationDeclarations.length ) {\n\t\t\t\t\t\t\t\t\truleset += `:root :where(${ styleVariationSelector }){${ styleVariationDeclarations.join(\n\t\t\t\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t\t\t\t) };}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( styleVariations?.css ) {\n\t\t\t\t\t\t\t\t\truleset += processCSSNesting(\n\t\t\t\t\t\t\t\t\t\tstyleVariations.css,\n\t\t\t\t\t\t\t\t\t\t`:root :where(${ styleVariationSelector })`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Check for pseudo selector in `styles` and handle separately.\n\t\t\t\tconst pseudoSelectorStyles = Object.entries( styles ).filter(\n\t\t\t\t\t( [ key ] ) => key.startsWith( ':' )\n\t\t\t\t);\n\n\t\t\t\tif ( pseudoSelectorStyles?.length ) {\n\t\t\t\t\tpseudoSelectorStyles.forEach(\n\t\t\t\t\t\t( [ pseudoKey, pseudoStyle ] ) => {\n\t\t\t\t\t\t\tconst pseudoDeclarations =\n\t\t\t\t\t\t\t\tgetStylesDeclarations( pseudoStyle );\n\n\t\t\t\t\t\t\tif ( ! pseudoDeclarations?.length ) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// `selector` may be provided in a form\n\t\t\t\t\t\t\t// where block level selectors have sub element\n\t\t\t\t\t\t\t// selectors appended to them as a comma separated\n\t\t\t\t\t\t\t// string.\n\t\t\t\t\t\t\t// e.g. `h1 a,h2 a,h3 a,h4 a,h5 a,h6 a`;\n\t\t\t\t\t\t\t// Split and append pseudo selector to create\n\t\t\t\t\t\t\t// the proper rules to target the elements.\n\t\t\t\t\t\t\tconst _selector = selector\n\t\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t\t.map( ( sel ) => sel + pseudoKey )\n\t\t\t\t\t\t\t\t.join( ',' );\n\n\t\t\t\t\t\t\t// As pseudo classes such as :hover, :focus etc. have class-level\n\t\t\t\t\t\t\t// specificity, they must use the `:root :where()` wrapper. This.\n\t\t\t\t\t\t\t// caps the specificity at `0-1-0` to allow proper nesting of variations\n\t\t\t\t\t\t\t// and block type element styles.\n\t\t\t\t\t\t\tconst pseudoRule = `:root :where(${ _selector }){${ pseudoDeclarations.join(\n\t\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t\t) };}`;\n\n\t\t\t\t\t\t\truleset += pseudoRule;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tif ( options.layoutStyles ) {\n\t\t/* Add alignment / layout styles */\n\t\truleset =\n\t\t\truleset +\n\t\t\t'.wp-site-blocks > .alignleft { float: left; margin-right: 2em; }';\n\t\truleset =\n\t\t\truleset +\n\t\t\t'.wp-site-blocks > .alignright { float: right; margin-left: 2em; }';\n\t\truleset =\n\t\t\truleset +\n\t\t\t'.wp-site-blocks > .aligncenter { justify-content: center; margin-left: auto; margin-right: auto; }';\n\t}\n\n\tif ( options.blockGap && hasBlockGapSupport ) {\n\t\t// Use fallback of `0.5em` just in case, however if there is blockGap support, there should nearly always be a real value.\n\t\tconst gapValue =\n\t\t\tgetGapCSSValue( tree?.styles?.spacing?.blockGap ) || '0.5em';\n\t\truleset =\n\t\t\truleset +\n\t\t\t`:root :where(.wp-site-blocks) > * { margin-block-start: ${ gapValue }; margin-block-end: 0; }`;\n\t\truleset =\n\t\t\truleset +\n\t\t\t':root :where(.wp-site-blocks) > :first-child { margin-block-start: 0; }';\n\t\truleset =\n\t\t\truleset +\n\t\t\t':root :where(.wp-site-blocks) > :last-child { margin-block-end: 0; }';\n\t}\n\n\tif ( options.presets ) {\n\t\tnodesWithSettings.forEach( ( { selector, presets } ) => {\n\t\t\tif (\n\t\t\t\tROOT_BLOCK_SELECTOR === selector ||\n\t\t\t\tROOT_CSS_PROPERTIES_SELECTOR === selector\n\t\t\t) {\n\t\t\t\t// Do not add extra specificity for top-level classes.\n\t\t\t\tselector = '';\n\t\t\t}\n\n\t\t\tconst classes = getPresetsClasses( selector, presets );\n\t\t\tif ( classes.length > 0 ) {\n\t\t\t\truleset += classes;\n\t\t\t}\n\t\t} );\n\t}\n\n\treturn ruleset;\n};\n\nexport function toSvgFilters( tree, blockSelectors ) {\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\treturn nodesWithSettings.flatMap( ( { presets } ) => {\n\t\treturn getPresetsSvgFilters( presets );\n\t} );\n}\n\nconst getSelectorsConfig = ( blockType, rootSelector ) => {\n\tif (\n\t\tblockType?.selectors &&\n\t\tObject.keys( blockType.selectors ).length > 0\n\t) {\n\t\treturn blockType.selectors;\n\t}\n\n\tconst config = { root: rootSelector };\n\tObject.entries( BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS ).forEach(\n\t\t( [ featureKey, featureName ] ) => {\n\t\t\tconst featureSelector = getBlockCSSSelector(\n\t\t\t\tblockType,\n\t\t\t\tfeatureKey\n\t\t\t);\n\n\t\t\tif ( featureSelector ) {\n\t\t\t\tconfig[ featureName ] = featureSelector;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn config;\n};\n\nexport const getBlockSelectors = (\n\tblockTypes,\n\tgetBlockStyles,\n\tvariationInstanceId\n) => {\n\tconst result = {};\n\tblockTypes.forEach( ( blockType ) => {\n\t\tconst name = blockType.name;\n\t\tconst selector = getBlockCSSSelector( blockType );\n\t\tlet duotoneSelector = getBlockCSSSelector(\n\t\t\tblockType,\n\t\t\t'filter.duotone'\n\t\t);\n\n\t\t// Keep backwards compatibility for support.color.__experimentalDuotone.\n\t\tif ( ! duotoneSelector ) {\n\t\t\tconst rootSelector = getBlockCSSSelector( blockType );\n\t\t\tconst duotoneSupport = getBlockSupport(\n\t\t\t\tblockType,\n\t\t\t\t'color.__experimentalDuotone',\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tduotoneSelector =\n\t\t\t\tduotoneSupport && scopeSelector( rootSelector, duotoneSupport );\n\t\t}\n\n\t\tconst hasLayoutSupport =\n\t\t\t!! blockType?.supports?.layout ||\n\t\t\t!! blockType?.supports?.__experimentalLayout;\n\t\tconst fallbackGapValue =\n\t\t\tblockType?.supports?.spacing?.blockGap?.__experimentalDefault;\n\n\t\tconst blockStyleVariations = getBlockStyles( name );\n\t\tconst styleVariationSelectors = {};\n\t\tblockStyleVariations?.forEach( ( variation ) => {\n\t\t\tconst variationSuffix = variationInstanceId\n\t\t\t\t? `-${ variationInstanceId }`\n\t\t\t\t: '';\n\t\t\tconst variationName = `${ variation.name }${ variationSuffix }`;\n\t\t\tconst styleVariationSelector = getBlockStyleVariationSelector(\n\t\t\t\tvariationName,\n\t\t\t\tselector\n\t\t\t);\n\n\t\t\tstyleVariationSelectors[ variationName ] = styleVariationSelector;\n\t\t} );\n\n\t\t// For each block support feature add any custom selectors.\n\t\tconst featureSelectors = getSelectorsConfig( blockType, selector );\n\n\t\tresult[ name ] = {\n\t\t\tduotoneSelector,\n\t\t\tfallbackGapValue,\n\t\t\tfeatureSelectors: Object.keys( featureSelectors ).length\n\t\t\t\t? featureSelectors\n\t\t\t\t: undefined,\n\t\t\thasLayoutSupport,\n\t\t\tname,\n\t\t\tselector,\n\t\t\tstyleVariationSelectors: blockStyleVariations?.length\n\t\t\t\t? styleVariationSelectors\n\t\t\t\t: undefined,\n\t\t};\n\t} );\n\n\treturn result;\n};\n\n/**\n * If there is a separator block whose color is defined in theme.json via background,\n * update the separator color to the same value by using border color.\n *\n * @param {Object} config Theme.json configuration file object.\n * @return {Object} configTheme.json configuration file object updated.\n */\nfunction updateConfigWithSeparator( config ) {\n\tconst needsSeparatorStyleUpdate =\n\t\tconfig.styles?.blocks?.[ 'core/separator' ] &&\n\t\tconfig.styles?.blocks?.[ 'core/separator' ].color?.background &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].color?.text &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].border?.color;\n\tif ( needsSeparatorStyleUpdate ) {\n\t\treturn {\n\t\t\t...config,\n\t\t\tstyles: {\n\t\t\t\t...config.styles,\n\t\t\t\tblocks: {\n\t\t\t\t\t...config.styles.blocks,\n\t\t\t\t\t'core/separator': {\n\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ],\n\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ].color,\n\t\t\t\t\t\t\ttext: config.styles?.blocks[ 'core/separator' ]\n\t\t\t\t\t\t\t\t.color.background,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\treturn config;\n}\n\nexport function processCSSNesting( css, blockSelector ) {\n\tlet processedCSS = '';\n\n\tif ( ! css || css.trim() === '' ) {\n\t\treturn processedCSS;\n\t}\n\n\t// Split CSS nested rules.\n\tconst parts = css.split( '&' );\n\tparts.forEach( ( part ) => {\n\t\tif ( ! part || part.trim() === '' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isRootCss = ! part.includes( '{' );\n\t\tif ( isRootCss ) {\n\t\t\t// If the part doesn't contain braces, it applies to the root level.\n\t\t\tprocessedCSS += `:root :where(${ blockSelector }){${ part.trim() }}`;\n\t\t} else {\n\t\t\t// If the part contains braces, it's a nested CSS rule.\n\t\t\tconst splittedPart = part.replace( '}', '' ).split( '{' );\n\t\t\tif ( splittedPart.length !== 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [ nestedSelector, cssValue ] = splittedPart;\n\n\t\t\t// Handle pseudo elements such as ::before, ::after, etc. Regex will also\n\t\t\t// capture any leading combinator such as >, +, or ~, as well as spaces.\n\t\t\t// This allows pseudo elements as descendants e.g. `.parent ::before`.\n\t\t\tconst matches = nestedSelector.match( /([>+~\\s]*::[a-zA-Z-]+)/ );\n\t\t\tconst pseudoPart = matches ? matches[ 1 ] : '';\n\t\t\tconst withoutPseudoElement = matches\n\t\t\t\t? nestedSelector.replace( pseudoPart, '' ).trim()\n\t\t\t\t: nestedSelector.trim();\n\n\t\t\tlet combinedSelector;\n\t\t\tif ( withoutPseudoElement === '' ) {\n\t\t\t\t// Only contained a pseudo element to use the block selector to form\n\t\t\t\t// the final `:root :where()` selector.\n\t\t\t\tcombinedSelector = blockSelector;\n\t\t\t} else {\n\t\t\t\t// If the nested selector is a descendant of the block scope it with the\n\t\t\t\t// block selector. Otherwise append it to the block selector.\n\t\t\t\tcombinedSelector = nestedSelector.startsWith( ' ' )\n\t\t\t\t\t? scopeSelector( blockSelector, withoutPseudoElement )\n\t\t\t\t\t: appendToSelector( blockSelector, withoutPseudoElement );\n\t\t\t}\n\n\t\t\t// Build final rule, re-adding any pseudo element outside the `:where()`\n\t\t\t// to maintain valid CSS selector.\n\t\t\tprocessedCSS += `:root :where(${ combinedSelector })${ pseudoPart }{${ cssValue.trim() }}`;\n\t\t}\n\t} );\n\treturn processedCSS;\n}\n\n/**\n * Returns the global styles output using a global styles configuration.\n * If wishing to generate global styles and settings based on the\n * global styles config loaded in the editor context, use `useGlobalStylesOutput()`.\n * The use case for a custom config is to generate bespoke styles\n * and settings for previews, or other out-of-editor experiences.\n *\n * @param {Object}  mergedConfig       Global styles configuration.\n * @param {boolean} disableRootPadding Disable root padding styles.\n *\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutputWithConfig(\n\tmergedConfig = {},\n\tdisableRootPadding\n) {\n\tconst [ blockGap ] = useGlobalSetting( 'spacing.blockGap' );\n\tconst hasBlockGapSupport = blockGap !== null;\n\tconst hasFallbackGapSupport = ! hasBlockGapSupport; // This setting isn't useful yet: it exists as a placeholder for a future explicit fallback styles support.\n\tconst disableLayoutStyles = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn !! getSettings().disableLayoutStyles;\n\t} );\n\n\tconst { getBlockStyles } = useSelect( blocksStore );\n\n\treturn useMemo( () => {\n\t\tif ( ! mergedConfig?.styles || ! mergedConfig?.settings ) {\n\t\t\treturn [];\n\t\t}\n\t\tconst updatedConfig = updateConfigWithSeparator( mergedConfig );\n\n\t\tconst blockSelectors = getBlockSelectors(\n\t\t\tgetBlockTypes(),\n\t\t\tgetBlockStyles\n\t\t);\n\n\t\tconst customProperties = toCustomProperties(\n\t\t\tupdatedConfig,\n\t\t\tblockSelectors\n\t\t);\n\n\t\tconst globalStyles = toStyles(\n\t\t\tupdatedConfig,\n\t\t\tblockSelectors,\n\t\t\thasBlockGapSupport,\n\t\t\thasFallbackGapSupport,\n\t\t\tdisableLayoutStyles,\n\t\t\tdisableRootPadding\n\t\t);\n\t\tconst svgs = toSvgFilters( updatedConfig, blockSelectors );\n\n\t\tconst styles = [\n\t\t\t{\n\t\t\t\tcss: customProperties,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcss: globalStyles,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t// Load custom CSS in own stylesheet so that any invalid CSS entered in the input won't break all the global styles in the editor.\n\t\t\t{\n\t\t\t\tcss: updatedConfig.styles.css ?? '',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tassets: svgs,\n\t\t\t\t__unstableType: 'svg',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t];\n\n\t\t// Loop through the blocks to check if there are custom CSS values.\n\t\t// If there are, get the block selector and push the selector together with\n\t\t// the CSS value to the 'stylesheets' array.\n\t\tgetBlockTypes().forEach( ( blockType ) => {\n\t\t\tif ( updatedConfig.styles.blocks[ blockType.name ]?.css ) {\n\t\t\t\tconst selector = blockSelectors[ blockType.name ].selector;\n\t\t\t\tstyles.push( {\n\t\t\t\t\tcss: processCSSNesting(\n\t\t\t\t\t\tupdatedConfig.styles.blocks[ blockType.name ]?.css,\n\t\t\t\t\t\tselector\n\t\t\t\t\t),\n\t\t\t\t\tisGlobalStyles: true,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\treturn [ styles, updatedConfig.settings ];\n\t}, [\n\t\thasBlockGapSupport,\n\t\thasFallbackGapSupport,\n\t\tmergedConfig,\n\t\tdisableLayoutStyles,\n\t\tdisableRootPadding,\n\t\tgetBlockStyles,\n\t] );\n}\n\n/**\n * Returns the global styles output based on the current state of global styles config loaded in the editor context.\n *\n * @param {boolean} disableRootPadding Disable root padding styles.\n *\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutput( disableRootPadding = false ) {\n\tconst { merged: mergedConfig } = useContext( GlobalStylesContext );\n\treturn useGlobalStylesOutputWithConfig( mergedConfig, disableRootPadding );\n}\n"],"mappings":"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","ignoreList":[]}